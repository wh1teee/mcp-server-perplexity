name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          cache-dependency-path: './perplexity-ask/pnpm-lock.yaml'
          registry-url: 'https://registry.npmjs.org'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        working-directory: ./perplexity-ask
        run: pnpm install --frozen-lockfile

      - name: Build
        working-directory: ./perplexity-ask
        run: pnpm run build

      - name: Publish to npm
        working-directory: ./perplexity-ask
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/github-script@v7
        with:
          script: |
            // Extract tag name from GITHUB_REF or use a fallback
            const tagName = process.env.GITHUB_REF.startsWith('refs/tags/') 
              ? process.env.GITHUB_REF.replace('refs/tags/', '')
              : 'v0.3.0';
              
            const { data: release } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName,
              name: `Release ${tagName}`,
              body: `## üöÄ Enhanced MCP Server ${tagName}\n\n### Major Features\n- Complete Perplexity API parameter support across all tools\n- Advanced search context control (low/medium/high)\n- Reasoning effort configuration for complex queries\n- Domain filtering for focused development research\n- Academic mode for authoritative sources\n- Enhanced safety with comprehensive error handling\n\n### üöÄ Developer Experience\n- Intelligent parameter defaults optimized for development\n- Comprehensive documentation and usage examples\n- Type-safe implementation with full validation\n- Related questions and visual content support\n\n### üêõ Bug Fixes\n- Fixed undefined image URL display issues\n- Added robust API response validation\n- Improved error messages and edge case handling\n- Fixed GitHub Actions npm authentication\n\n### üè¢ Architecture\n- Enhanced MCP tool schemas with rich parameter descriptions\n- Backward compatible with existing implementations\n- Optimized for development assistance workflows\n\nSee [CLAUDE.md](https://github.com/${context.repo.owner}/${context.repo.repo}/blob/main/CLAUDE.md) for comprehensive usage guide.`,
              draft: false,
              prerelease: false
            });
            console.log(`Created release: ${release.html_url}`) 